{"name":"Tdcss.js","tagline":"A light-weight framework for structured HTML/CSS development","body":"tdcss.js - Super simple styleguide tool\r\n================\r\n\r\nTDCSS aims to help you write solid, maintainable and modular CSS.\r\n\r\nIt's especially well suited to adopt a test-driven approach to CSS styling - but of course you may just as well use it to build a regular online styleguide.\r\n\r\n![tdcss.js in action](https://dl.dropbox.com/u/2886688/web/projekter/tdcss.js/demo/preview.png)\r\n\r\nWhat's the benefit over other styleguide tools?\r\n---\r\n- **No server tech dependencies** (no need for node.js, Ruby, PHP, etc.) - TDCSS is just a jQuery plugin that works on flat HTML files.\r\n- **No markup bloat** - TDCSS uses HTML comments for structuring.\r\n- **Hassle-free setup** - Flat files make it super-easy to use TDCSS together with Livereload or similar browser refresh tools for an efficient workflow.\r\n\r\nDemo\r\n---\r\n[Introduction presentation from Frontendersdk meetup ...](http://prezi.com/piifihs2ohet/test-driven-css/ \"A prezi\")\r\n\r\n[See it in action ...](https://dl.dropbox.com/u/2886688/web/projekter/tdcss.js/index.html \"TDCSS.js demo\")\r\n\r\nIn the head:\r\n```html\r\n<!-- Your own CSS -->\r\n<link rel=\"stylesheet\" href=\"demo/style.css\" type=\"text/css\" media=\"screen\">\r\n\r\n<!-- TDCSS -->\r\n<link rel=\"stylesheet\" href=\"src/tdcss.css\" type=\"text/css\" media=\"screen\">\r\n<script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js\"></script>\r\n<script type=\"text/javascript\" src=\"src/tdcss.js\"></script>\r\n<script type=\"text/javascript\">\r\n     $(function(){\r\n         $(\"#tdcss\").tdcss();\r\n     })\r\n</script>\r\n```\r\n\r\nThe markup:\r\n```html\r\n<div id=\"tdcss\">\r\n\r\n\t<!-- # Box styles -->\r\n\t<!-- & Box styles is a collection of generic boxes. -->\r\n\t<!-- : Basic box -->\r\n\t<div class=\"box\">\r\n\t    <p>This is a basic box.</p>\r\n\t</div>\r\n\t<!-- : Notice box -->\r\n\t<div class=\"box-notice\">\r\n\t    <p>This is a notice box.</p>\r\n\t</div>\r\n\t<!-- : Warning box -->\r\n\t<div class=\"box-warning\">\r\n\t    <p>This is a warning box.</p>\r\n\t</div>\r\n\t<!-- : Alert box -->\r\n\t<div class=\"box-alert\">\r\n\t    <p>This is an alert box.</p>\r\n\t</div>\r\n\r\n\t<!-- # Typography -->\r\n\t<!-- : H1 -->\r\n\t<h1>This is an H1 header.</h1>\r\n\t<!-- : H2 -->\r\n\t<h2>This is an H2 header</h2>\r\n\t<!-- : H3 -->\r\n\t<h3>This is an H3 header</h3>\r\n\r\n\t<!-- # Custom height -->\r\n\t<!-- : Some element that needs a lot of space; 700px -->\r\n\t<h3>This is a test.</h3>\r\n\r\n</div>\r\n```\r\n\r\n\r\nUsage\r\n---\r\n\r\nAn html comment with prefix \":\" means the start of a fragment:\r\n```html\r\n<!-- : -->\r\n```\r\n\r\nThe (optional) first text after the prefix becomes the title of the fragment:\r\n```html\r\n<!-- : Element title -->\r\n```\r\n\r\nFix the height of the fragment container by appending a CSS height value after a semicolon.\r\nThis is useful for position:absolute type layouts that don't by themselfes expand their container:\r\n```html\r\n<!-- : Element title; 400px -->\r\n```\r\n\r\nYou can make section dividers by inserting a section comment:\r\n```html\r\n<!-- # Section name -->\r\n```\r\n\r\nYou may also place description blocks anywhere in your markup:\r\n```html\r\n<!-- & Descriptive text -->\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}